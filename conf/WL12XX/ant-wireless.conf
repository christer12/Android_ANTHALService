# This is an example configuration file.
# ANTHalService expects the configuration file to be found at /etc/ant-wireless.conf
# These settings will be read once per boot.

# The opcode needed for an hci enable command. Don't need to specify if an
# HCI-based enable is not used.
# defaults to 0x0000;
#hci.enable.opcode=0x0000

# An HCI command to send during enable. If not specified no command will be sent
# defaults to blank
#hci.enable.command =

# Decides what lower level transport is used to send and receive ant messages.
# Current values are:
# VFS: use the libantradio.so implementation to send and recieve ant messages.
# HCI: use HCI vendor specific commands to send and receive ant messages.
# defaults to VFS
transport=HCI

##############################################################################
# HCI transport section
#
# These parameters are only used if the transport was set to HCI
##############################################################################

# Specifies the framer class to use at runtime for sending and receiving
# ant messages over HCI.
# The class must be available to ANTHalService at runtime (either built into
# the hal service or the devices framework classes).
#
# MUST BE SPECIFIED IF TRANSPORT IS HCI. There is no default.
#
# AntHalService has the following classes already available:

# For BRCM433X chips
#hci.formatclass=com.dsi.ant.framers.BCM4330Framer
# For WL12XX chips
hci.formatclass=com.dsi.ant.framers.WL12XXFramer

# The opcode used to send ant-messsage to the MMC.
# defaults to 0x0000
hci.opcode=0xFDD1

# These two variables define the filter used for receiving ant messages from the
# chip.
# The filter will be applied to the payload of any Vendor specific event packets
# received, and is specified as a mask and value, where any bits set in the mask
# signify that those same bits in the packet must match the given value.
# defaults to an empty filter which means no events will be received.
hci.filter.mask = 0xFFFF
hci.filter.value = 0x0500

# Defines how many times a command will be retried before giving up. Commands
# will need to be retried during a burst if the chip has filled up its transmit
# buffer.
# defaults to 100
hci.command.retries = 10

# Defines how much time will elapse before retransmits of a command that failed
# to send successfully the first time in ms.
# defaults to 100
hci.command.retry_sleep_ms = 10
